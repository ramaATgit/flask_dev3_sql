
from datetime import datetime
from app import db

class Bank(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    frn = db.Column(db.String(20), unique=True, nullable=False)
    accounts = db.relationship('Account', backref='bank', lazy=True)

class Account(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    account_number = db.Column(db.String(20), unique=True, nullable=False)
    account_name = db.Column(db.String(100), nullable=False)
    balance = db.Column(db.Float, default=0.0)
    account_type = db.Column(db.String(10), default='none')
    owner = db.Column(db.String(1), nullable=False)
    interest_rate = db.Column(db.Float, default=0.0)
    start_date = db.Column(db.Date, default=datetime.utcnow)
    end_date = db.Column(db.Date, nullable=True)
    interest_frequency = db.Column(db.String(20), nullable=True)
    savings = db.Column(db.String(100), nullable=True)
    bank_name = db.Column(db.String(100), nullable=True)
    bank_id = db.Column(db.Integer, db.ForeignKey('bank.id'), nullable=False)
    transactions = db.relationship('TransactionLog', backref='account', lazy=True)

class TransactionLog(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    account_id = db.Column(db.Integer, db.ForeignKey('account.id'), nullable=False)
    amount = db.Column(db.Float, nullable=False)
    timestamp = db.Column(db.DateTime, default=datetime.utcnow)
    description = db.Column(db.String(200))
